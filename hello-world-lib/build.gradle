/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    id("maven-publish")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for Spock testing
    testImplementation 'org.codehaus.groovy:groovy:3.0.18'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.2-groovy-3.0'
    testImplementation 'junit:junit:4.13.2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }

    withJavadocJar()
    withSourcesJar()
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.jar{
    enabled = true
    // Remove `plain` postfix from jar file name
    archiveClassifier = ""
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'es.edn'
            artifactId = 'hello-world'

            from components.java

            pom {
                name = 'hello-world'
                description = 'Sample application'
                url = 'https://github.com/edn-es/helloworld'
                inceptionYear = '2023'
                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'https://spdx.org/licenses/Apache-2.0.html'
                    }
                }
                developers {
                    developer {
                        id = 'jagedn'
                        name = 'Jorge Aguilera'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/edn-es/helloworld.git'
                    developerConnection = 'scm:git:ssh://github.com/edn-es/helloworld.git'
                    url = 'http://github.com/edn-es/helloworld'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}